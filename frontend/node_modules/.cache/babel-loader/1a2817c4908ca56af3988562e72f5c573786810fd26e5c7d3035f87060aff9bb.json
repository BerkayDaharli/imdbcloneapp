{"ast":null,"code":"// src/pages/MovieDetailPage.js\nimport React,{useState,useEffect,useContext}from'react';import{useParams,useNavigate}from'react-router-dom';import{fetchMovieDetails,fetchTrailer,fetchPopularity}from'../services/movieService';import api from'../services/api';// Use the configured Axios instance\nimport{AuthContext}from'../context/AuthContext';import'./MovieDetailPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MovieDetailPage=()=>{const{id}=useParams();const navigate=useNavigate();const[movie,setMovie]=useState(null);const[trailer,setTrailer]=useState('');const[trailerError,setTrailerError]=useState(false);const[popularity,setPopularity]=useState('');const[inWatchlist,setInWatchlist]=useState(false);// Track watchlist status\nconst{isLoggedIn}=useContext(AuthContext);useEffect(()=>{const loadMovieDetails=async()=>{try{const movieData=await fetchMovieDetails(id);setMovie(movieData);try{const trailerUrl=await fetchTrailer(movieData.Title);setTrailer(trailerUrl);}catch(error){setTrailerError(true);}const popularityData=await fetchPopularity(movieData.imdbID);setPopularity(popularityData);// Check if the movie is in the user's watchlist\nif(isLoggedIn){const response=await api.get(\"/watchlist/check/\".concat(movieData.imdbID));setInWatchlist(response.data.inWatchlist);}}catch(error){console.error('Error loading movie details:',error);}};loadMovieDetails();},[id,isLoggedIn]);const handleAddToWatchlist=()=>{if(!isLoggedIn){navigate('/login');}else{api.post('/watchlist/add',{imdbID:movie.imdbID}).then(response=>{setInWatchlist(true);}).catch(error=>{console.error('Error adding movie to watchlist:',error);});}};const handleRemoveFromWatchlist=()=>{api.post('/watchlist/remove',{imdbID:movie.imdbID}).then(response=>{setInWatchlist(false);}).catch(error=>{console.error('Error removing movie from watchlist:',error);});};if(!movie)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"movie-detail-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"movie-title\",children:movie.Title}),/*#__PURE__*/_jsxs(\"h2\",{className:\"info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"movie-rating\",children:[\"IMDb Rating\\u2B50(\",movie.imdbRating,\"/10)\"]}),popularity&&/*#__PURE__*/_jsxs(\"span\",{className:\"movie-popularity\",children:[\"Popularity: \",popularity]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"movie-poster-container\",children:/*#__PURE__*/_jsx(\"img\",{className:\"movie-poster\",src:movie.Poster,alt:\"\".concat(movie.Title,\" poster\")})}),/*#__PURE__*/_jsx(\"div\",{className:\"movie-trailer\",children:trailer?/*#__PURE__*/_jsx(\"iframe\",{src:trailer,title:\"YouTube video player\",frameBorder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:true}):trailerError?/*#__PURE__*/_jsx(\"p\",{children:\"Couldn't load the trailer\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading trailer...\"})})]}),isLoggedIn&&/*#__PURE__*/_jsx(_Fragment,{children:inWatchlist?/*#__PURE__*/_jsx(\"button\",{className:\"remove\",onClick:handleRemoveFromWatchlist,children:\"Remove from my watchlist\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleAddToWatchlist,children:\"Add to my watchlist\"})})]});};export default MovieDetailPage;","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","fetchMovieDetails","fetchTrailer","fetchPopularity","api","AuthContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MovieDetailPage","id","navigate","movie","setMovie","trailer","setTrailer","trailerError","setTrailerError","popularity","setPopularity","inWatchlist","setInWatchlist","isLoggedIn","loadMovieDetails","movieData","trailerUrl","Title","error","popularityData","imdbID","response","get","concat","data","console","handleAddToWatchlist","post","then","catch","handleRemoveFromWatchlist","children","className","imdbRating","src","Poster","alt","title","frameBorder","allow","allowFullScreen","onClick"],"sources":["C:/Users/Serhan/Desktop/berkayodev3/frontend/src/pages/MovieDetailPage.js"],"sourcesContent":["// src/pages/MovieDetailPage.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { fetchMovieDetails, fetchTrailer, fetchPopularity } from '../services/movieService';\r\nimport api from '../services/api'; // Use the configured Axios instance\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport './MovieDetailPage.css';\r\n\r\nconst MovieDetailPage = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [movie, setMovie] = useState(null);\r\n  const [trailer, setTrailer] = useState('');\r\n  const [trailerError, setTrailerError] = useState(false);\r\n  const [popularity, setPopularity] = useState('');\r\n  const [inWatchlist, setInWatchlist] = useState(false); // Track watchlist status\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const loadMovieDetails = async () => {\r\n      try {\r\n        const movieData = await fetchMovieDetails(id);\r\n        setMovie(movieData);\r\n        try {\r\n          const trailerUrl = await fetchTrailer(movieData.Title);\r\n          setTrailer(trailerUrl);\r\n        } catch (error) {\r\n          setTrailerError(true);\r\n        }\r\n        const popularityData = await fetchPopularity(movieData.imdbID);\r\n        setPopularity(popularityData);\r\n\r\n        // Check if the movie is in the user's watchlist\r\n        if (isLoggedIn) {\r\n          const response = await api.get(`/watchlist/check/${movieData.imdbID}`);\r\n          setInWatchlist(response.data.inWatchlist);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading movie details:', error);\r\n      }\r\n    };\r\n\r\n    loadMovieDetails();\r\n  }, [id, isLoggedIn]);\r\n\r\n  const handleAddToWatchlist = () => {\r\n    if (!isLoggedIn) {\r\n      navigate('/login');\r\n    } else {\r\n      api.post('/watchlist/add', { imdbID: movie.imdbID })\r\n        .then(response => {\r\n          setInWatchlist(true);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error adding movie to watchlist:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromWatchlist = () => {\r\n    api.post('/watchlist/remove', { imdbID: movie.imdbID })\r\n      .then(response => {\r\n        setInWatchlist(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error removing movie from watchlist:', error);\r\n      });\r\n  };\r\n\r\n  if (!movie) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"movie-detail-container\">\r\n      <h1 className=\"movie-title\">{movie.Title}</h1>\r\n      <h2 className=\"info\">\r\n        <span className=\"movie-rating\">IMDb Rating‚≠ê({movie.imdbRating}/10)</span>\r\n        {popularity && <span className=\"movie-popularity\">Popularity: {popularity}</span>}\r\n      </h2>\r\n      <div className=\"movie-content\">\r\n        <div className=\"movie-poster-container\">\r\n          <img className=\"movie-poster\" src={movie.Poster} alt={`${movie.Title} poster`} />\r\n        </div>\r\n        <div className=\"movie-trailer\">\r\n          {trailer ? (\r\n            <iframe\r\n              src={trailer}\r\n              title=\"YouTube video player\"\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          ) : trailerError ? (\r\n            <p>Couldn't load the trailer</p>\r\n          ) : (\r\n            <p>Loading trailer...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {isLoggedIn && (\r\n        <>\r\n          {inWatchlist ? (\r\n            <button className=\"remove\" onClick={handleRemoveFromWatchlist}>Remove from my watchlist</button>\r\n          ) : (\r\n            <button onClick={handleAddToWatchlist}>Add to my watchlist</button>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}