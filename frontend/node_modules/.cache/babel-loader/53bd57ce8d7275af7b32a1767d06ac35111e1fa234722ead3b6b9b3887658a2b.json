{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isLoggedIn,setIsLoggedIn]=useState(false);const[username,setUsername]=useState('');useEffect(()=>{const user=JSON.parse(localStorage.getItem('user'));if(user){setIsLoggedIn(true);setUsername(user.email);// Assuming email is the username\n}},[]);const login=(user,token)=>{localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));setIsLoggedIn(true);setUsername(user.email);};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setIsLoggedIn(false);setUsername('');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn,username,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isLoggedIn","setIsLoggedIn","username","setUsername","user","JSON","parse","localStorage","getItem","email","login","token","setItem","stringify","logout","removeItem","Provider","value"],"sources":["C:/Users/Serhan/Desktop/berkayodev3/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      setIsLoggedIn(true);\r\n      setUsername(user.email); // Assuming email is the username\r\n    }\r\n  }, []);\r\n\r\n  const login = (user, token) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setIsLoggedIn(true);\r\n    setUsername(user.email);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsLoggedIn(false);\r\n    setUsername('');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, username, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CACrD,GAAIJ,IAAI,CAAE,CACRH,aAAa,CAAC,IAAI,CAAC,CACnBE,WAAW,CAACC,IAAI,CAACK,KAAK,CAAC,CAAE;AAC3B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,KAAK,CAAGA,CAACN,IAAI,CAAEO,KAAK,GAAK,CAC7BJ,YAAY,CAACK,OAAO,CAAC,OAAO,CAAED,KAAK,CAAC,CACpCJ,YAAY,CAACK,OAAO,CAAC,MAAM,CAAEP,IAAI,CAACQ,SAAS,CAACT,IAAI,CAAC,CAAC,CAClDH,aAAa,CAAC,IAAI,CAAC,CACnBE,WAAW,CAACC,IAAI,CAACK,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAM,CACnBP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC,CAC/Bd,aAAa,CAAC,KAAK,CAAC,CACpBE,WAAW,CAAC,EAAE,CAAC,CACjB,CAAC,CAED,mBACER,IAAA,CAACC,WAAW,CAACoB,QAAQ,EAACC,KAAK,CAAE,CAAEjB,UAAU,CAAEE,QAAQ,CAAEQ,KAAK,CAAEI,MAAO,CAAE,CAAAf,QAAA,CAClEA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}