{"ast":null,"code":"import axios from 'axios';\n\n// Create an Axios instance\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api' // Replace with your backend URL\n});\n\n// Add a request interceptor to include the token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const loginUser = async (email, password) => {\n  const response = await api.post('/auth/login', {\n    email,\n    password\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","loginUser","email","password","response","post","data"],"sources":["C:/Users/Serhan/Desktop/berkayodev3/frontend/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an Axios instance\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api', // Replace with your backend URL\r\n});\r\n\r\n// Add a request interceptor to include the token\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport const loginUser = async (email, password) => {\r\n  const response = await api.post('/auth/login', { email, password });\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EAAGM,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,OAAO,MAAMG,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAE;IAAEH,KAAK;IAAEC;EAAS,CAAC,CAAC;EACnE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}